//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileTrainsferFramework.Server.ClientFileTransferServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransferRequest", Namespace="http://schemas.datacontract.org/2004/07/FileTransferFramework.Client")]
    public partial class FileTransferRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private byte[] ContentField;
        
        private string FileNameField;
        
        private string HashField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash
        {
            get
            {
                return this.HashField;
            }
            set
            {
                this.HashField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransferResponse", Namespace="http://schemas.datacontract.org/2004/07/FileTransferFramework.Client")]
    public partial class FileTransferResponse : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreateAtField;
        
        private string FileNameField;
        
        private string MessageField;
        
        private string ResponseStatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateAt
        {
            get
            {
                return this.CreateAtField;
            }
            set
            {
                this.CreateAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseStatus
        {
            get
            {
                return this.ResponseStatusField;
            }
            set
            {
                this.ResponseStatusField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFileTransfer")]
public interface IFileTransfer
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/Put", ReplyAction="http://tempuri.org/IFileTransfer/PutResponse")]
    FileTransferFramework.Client.FileTransferResponse Put(FileTransferFramework.Client.FileTransferRequest fileToPush);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/Put", ReplyAction="http://tempuri.org/IFileTransfer/PutResponse")]
    System.Threading.Tasks.Task<FileTransferFramework.Client.FileTransferResponse> PutAsync(FileTransferFramework.Client.FileTransferRequest fileToPush);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFileTransferChannel : IFileTransfer, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FileTransferClient : System.ServiceModel.ClientBase<IFileTransfer>, IFileTransfer
{
    
    public FileTransferClient()
    {
    }
    
    public FileTransferClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FileTransferClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public FileTransferFramework.Client.FileTransferResponse Put(FileTransferFramework.Client.FileTransferRequest fileToPush)
    {
        return base.Channel.Put(fileToPush);
    }
    
    public System.Threading.Tasks.Task<FileTransferFramework.Client.FileTransferResponse> PutAsync(FileTransferFramework.Client.FileTransferRequest fileToPush)
    {
        return base.Channel.PutAsync(fileToPush);
    }
}
